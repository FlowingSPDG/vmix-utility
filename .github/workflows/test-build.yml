name: 'Test Build'

on:
  push:
    branches: [main, master, develop, feature/*]
  pull_request:
    branches: [main, master, develop]

jobs:
  test-tauri:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install frontend dependencies
        run: |
          cd app
          bun install

      - name: Set build environment variables
        shell: bash
        run: |
          echo "GIT_COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "GIT_BRANCH=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          echo "BUILD_TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> $GITHUB_ENV

      - name: Test Build Tauri App
        uses: tauri-apps/tauri-action@v0
        env:
          GIT_COMMIT_HASH: ${{ env.GIT_COMMIT_HASH }}
          GIT_BRANCH: ${{ env.GIT_BRANCH }}
          BUILD_TIMESTAMP: ${{ env.BUILD_TIMESTAMP }}
          SCCACHE_GHA_ENABLED: "true"
          RUSTC_WRAPPER: "sccache"
        with:
          projectPath: './app'
          args: ${{ matrix.args }}
          # Don't create releases for test builds
          includeRelease: false